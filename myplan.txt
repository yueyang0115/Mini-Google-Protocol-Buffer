1.
Task: Create a class called FieldGenerator which takes one field(one name and one type), and can generate one field. 
Estimated Time: 1 hour
Target Deadline: 01/29 
Actual Time: 0.5 hour
Actual Delivery: 01/29
Commit ID: 778c83c4
Comments: It took shorter time than I expected. I just didn't realize that all this task need is hard coding when I made the plan.

2.
Task: Generate get/set method for one field in FieldGenerator class. 
Estimated Time: 1 hour
Target Deadline: 01/29 
Actual Time: 0.5 hour
Actual Delivery: 01/29
Commit ID: 778c83c4
Comments: It took shorter time than I expected because I overestimated the difficulty.

3.
Task: Create a class called FieldParser. Parse jsonarray field and get a hashmap containing "name" and "type".
Estimated Time: 2 hour
Target Deadline: 01/30
Actual Time: 4 hour
Actual Delivery: 01/30
Commit ID: 6bd3d238
Comments: At first I tried to parse from the raw json string. It took me a long time to figure out how to use JsonArray and JsonObject, then I realized it was hard to debug and to think about the whole frame if I write a parse class which starts from parsing the original json file, so I minimize the parsed scale and changed to only parse one field. It was very easy to debug.

4.
Task: Create a class called ClassParser. Parse jsonarray classes and get a hashmap containing "classname" and "classfield", classfield is got by calling FieldParser.
Estimated Time: 1.5 hour
Target Deadline: 01/30
Actual Time: 1 hour
Actual Delivery: 01/31
Commit ID:3dc6cc01
Comments: It was easy to write ClassParser since it is similar with FieldBuilder.

5.
Task: Create a class called Parser that can parse raw jsonobject, getPackage and getClassmap.
Estimated Time: 1 hour
Target Deadline: 01/30
Actual Time: 0.6 hour
Actual Delivery: 01/31
Commit ID:59b64b51
Comments: It was easy to write Parser since it is similar with ClassParser.

6.
Task: ClassBuilder can take a json string, parse to fields. 
Estimated Time: 1 hour
Target Deadline: 01/30
Actual Time: 1 hour
Actual Delivery: 01/31
Commit ID: fc65f5a6
Comments: It is easy to write since all the previous work are done. Just need to pay attention to corner case.

3.
Task: Generate constructor for one field in FieldGenerator class. 
Estimated Time: 1.5 hour
Target Deadline: 01/29
Actual Time:
Actual Delivery:
Commit ID:
Comments:

4.
Task: Create a class called ClassGenerator which takes multiple fields, iterates through all its fields and calls FieldGenerator, generates a class.   
Estimated Time: 1 hour
Target Deadline: 01/29 
Actual Time:
Actual Delivery:
Commit ID:
Comments:

5.
Task: Create a class called AllClassGenerator which takes multiple classes, iterates through all its classes and calls ClassGenerator, generates all classes.
Estimated Time: 1 hour
Target Deadline: 01/29
Actual Time:
Actual Delivery:
Commit ID:
Comments:




7.
Task: Take the parsed field as the input of FieldGenerator, take the parsed class as the input of ClassGenerator and take the parsed classes as the input of AllClassGenerator to test.
Estimated Time: 2 hour
Target Deadline: 01/30
Actual Time:
Actual Delivery:
Commit ID:
Comments:

8.
Task: Create the ClassBuilder class, realize its constructor and getclassnames method.  
Estimated Time: 1.5 hour
Target Deadline: 01/30
Actual Time:
Actual Delivery:
Commit ID:
Comments:

9.
Task: Realize Classbuilder's getsourcecode and creatallclasses method.
Task: Estimated Time: 2 hour
Target Deadline: 01/31
Actual Time:
Actual Delivery:
Commit ID:
Comments:

10.
Task: Modify FieldGenerator, check whether the type is array or not and generate specific methods.
Estimated Time: 1.5 hour
Target Deadline: 01/31
Actual Time:
Actual Delivery:
Commit ID:
Comments:

11.
Task: Modify FieldGenerator, handle recursive e situation.
Estimated Time: 2 hour
Target Deadline: 01/31
Actual Time:
Actual Delivery:
Commit ID:
Comments:

12.
Task: Modify FieldGenerator, handle multidimensional situation.
Estimated Time: 2 hour
Target Deadline: 02/01
Actual Time:
Actual Delivery:
Commit ID:
Comments:

13.
Task: Realize basic serialization.
Estimated Time: 3 hour
Target Deadline: 02/01
Actual Time:
Actual Delivery:
Commit ID:
Comments:

14.
Task: Realize basic deserialization.
Estimated Time: 3 hour
Target Deadline: 02/02
Actual Time:
Actual Delivery:
Commit ID:
Comments:

15.
Task: Modify Serialization and handle object field situation.
Estimated Time: 2 hour
Target Deadline: 02/02
Actual Time:
Actual Delivery:
Commit ID:
Comments:

